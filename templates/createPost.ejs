<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Post</title>
  <link rel="stylesheet" href="../static/styles/header.css"> <!-- 헤더 스타일을 포함한 CSS 파일 -->
  <style>

    @font-face {
        font-family: 'PR';
        src: url('https://fastly.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
        font-weight: 400;
        font-style: normal;
    }
    /* Header 및 Navbar 스타일 */
    body {
        font-family: 'PR';
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
    }
    /* Container, Sidebar 및 Content 스타일 */
    .container {
            display: grid;
            grid-template-columns: 250px 1fr 250px; /* 사이드바를 고정 너비로 설정 */
            gap: 20px;
            padding: 0px 20px 20px 20px;
        }
        .content-area {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
        }
        .content-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: auto auto;
            gap: 20px;
            width: 100%;
        }
    .container button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    } 
    .sidebar {
            background-color: #f9f9f9;
            padding: 10px;
            position: relative;
            width: 250px; /* 사이드바 너비 고정 */
        }
    .content {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 5px rgba(0,0,0,0.1);
    }
    form {
      display: grid;
      grid-template-columns: 1fr;
      gap: 20px;
    }
    label {
      font-weight: bold;
    }
    input[type="text"],
    textarea,
    select,
    input[type="file"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }
    textarea {
      height: 300px; /* 원하는 높이 설정 */
      resize: none;  /* 크기 조절 비활성화 */
    }
  </style>
  <script>       
      function goToChat() {
          window.location.href = '/chat';
      }
      function toggleDropdown() {
          const dropdown = document.getElementById('dropdown-menu');
          dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
      }
  </script>
</head>
<body>
  <%- include('header') %> 
  <div class="container">
      <div class="sidebar"></div>
      <div class="content">
        <h1>게시물 작성</h1>
        <form id="createPostForm" method="POST" action="/createPost" enctype="multipart/form-data">
          <div>
            <label for="title">제목:</label>
            <input type="text" id="title" name="title" required>
          </div>
          <br>
          <div>
              <label for="category">카테고리:</label>
              <select id="category" name="category" required>
                <option value="">Select a category</option>
                <option value="community">COMMUNITY</option>
                <option value="backend">BACKEND</option>
                <option value="frontend">FRONTEND</option>
                <!-- Add more options as needed -->
              </select>
            </div>
          <br>
          <div>
            <label for="content">내용:</label>
            <textarea id="content" name="content" required></textarea>
          </div>
          <br>
          <div>
            <label for="image">이미지 업로드:</label>
            <input type="file" id="image" name="image">
          </div>

          <button type="submit">게시물 작성</button>
        </form>
      </div>
    </div>

  <script>
    document.getElementById('createPostForm').addEventListener('submit', async (event) => {
      event.preventDefault();

      const formData = new FormData(event.target);
      const data = Object.fromEntries(formData);

      try {
        const response = await fetch('/createPost', {
          method: 'POST',
          body: formData  // 이미지 업로드를 위해 FormData 객체 전송
        });

        const result = await response.json();

        if (response.ok) {
          alert(result.message);
          event.target.reset();
          window.location.href = result.redirectTo; // 메인 페이지로 이동
        } else {
          alert(result.message || '게시물 작성 중 오류가 발생했습니다.');
        }
      } catch (error) {
        console.error('게시물 작성 중 오류 발생:', error);
        alert('게시물 작성 중 오류가 발생했습니다.');
      }
    });
  </script>
</body>
</html>
